

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                                           Fri Sep 03 01:09:43 2021


     1                           	processor	18F87K22
     2                           	pagewidth 132
     3                           	psect	udata_acs,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     4                           	psect	udata_bank0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     5                           	psect	udata_bank1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     6                           	psect	udata_bank2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     7                           	psect	udata_bank3,global,class=BANK3,space=1,delta=1,lowdata,noexec
     8                           	psect	udata_bank4,global,class=BANK4,space=1,delta=1,lowdata,noexec
     9                           	psect	udata_bank5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    10                           	psect	udata_bank6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    11                           	psect	udata_bank7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    12                           	psect	udata_bank8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    13                           	psect	udata_bank9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    14                           	psect	udata_bank10,global,class=BANK10,space=1,delta=1,lowdata,noexec
    15                           	psect	udata_bank11,global,class=BANK11,space=1,delta=1,lowdata,noexec
    16                           	psect	udata_bank12,global,class=BANK12,space=1,delta=1,lowdata,noexec
    17                           	psect	udata_bank13,global,class=BANK13,space=1,delta=1,lowdata,noexec
    18                           	psect	udata_bank14,global,class=BANK14,space=1,delta=1,lowdata,noexec
    19                           	psect	udata_bank15,global,class=BANK15,space=1,delta=1,lowdata,noexec
    20                           	psect	udata,global,class=RAM,space=1,delta=1,noexec
    21                           	psect	code,global,abs,reloc=2,class=CODE,delta=1
    22                           	psect	data,global,reloc=2,class=CONST,delta=1,noexec
    23                           	psect	edata,global,class=EEDATA,space=3,delta=2,noexec
    24  0000                     
    25                           	psect	udata_acs
    26  000005                     counter:
    27  000005                     	ds	1	; reserve one byte for a counter variable
    28  000006                     delay_count:
    29  000006                     	ds	1	; reserve data anywhere in RAM (here at 0x400)
    30                           
    31                           	psect	udata_bank4
    32  000400                     myArray:
    33  000400                     	ds	128	; reserve 128 bytes for message data
    34                           
    35                           	psect	code
    36  000000                     rst:
    37  000000                     	org	0
    38  000000  EF02  F000         	goto	setup
    39  000004                     setup:
    40  000004  9C7F               	bcf	127,6,c	; point to Flash program memory
    41  000006  8E7F               	bsf	127,7,c	; access Flash program memory
    42  000008  EC64  F0FF         	call	UART_Setup	; setup UART
    43  00000C  EC78  F0FF         	call	LCD_Setup	; setup UART
    44  000010  EC56  F0FF         	call	RTCC_Setup	; setup ((PORTG) and 0FFh), 4, a
    45  000014  6A95               	clrf	3989,c	; set portD as digital output for seconds display
    46  000016  EF0D  F000         	goto	start
    47  00001A                     start:
    48  00001A  EE04  F000         	lfsr	0,myArray	; Load FSR0 with address in RAM
    49  00001E  0E01               	movlw	low (myTable shr (0+16))	; address of data in PM
    50  000020  6EF8               	movwf	tblptru,c	; load upper bits to TBLPTRU
    51  000022  0EFE               	movlw	high myTable	; address of data in PM
    52  000024  6EF7               	movwf	tblptrh,c	; load high byte to TBLPTRH
    53  000026  0E9E               	movlw	low myTable	; address of data in PM
    54  000028  6EF6               	movwf	tblptrl,c	; load low byte to TBLPTRL
    55  00002A  0E0D               	movlw	13	; bytes to read
    56  00002C  6E05               	movwf	counter,c	; our counter register
    57  00002E                     loop:
    58  00002E  0009               	tblrd		*+	; one byte from PM to TABLAT, increment TBLPRT
    59  000030  CFF5 FFEE          	movff	tablat,postinc0	; move data from TABLAT to (FSR0), inc FSR0
    60  000034  2E05               	decfsz	counter,f,c	; count down to zero
    61  000036  D7FB               	bra	loop	; keep going until finished
    62  000038  0E0D               	movlw	13	; output message to UART
    63  00003A  EE24  F000         	lfsr	2,myArray
    64  00003E  EC6D  F0FF         	call	UART_Transmit_Message
    65  000042  0E0D               	movlw	13	; output message to LCD
    66  000044  0FFF               	addlw	255	; don't send the final carriage return to LCD
    67  000046  EE24  F000         	lfsr	2,myArray
    68  00004A  ECB2  F0FF         	call	LCD_Write_Message
    69  00004E                     loop_clock_read:
    70  00004E  EC5D  F0FF         	call	RTCC_Get_Seconds	; returns seconds value in W
    71  000052  6E83               	movwf	3971,c	; write value out to PORTD
    72  000054  EF27  F000         	goto	loop_clock_read	; goto loop_clock_read
    73  000058                     delay:
    74  000058  2E06               	decfsz	delay_count,f,c	; decrement until zero
    75  00005A  D7FE               	bra	delay
    76  00005C  0012               	return	
    77                           
    78                           	psect	data
    79  01FE9E                     myTable:
    80  01FE9E  48 65 6C 6C 6F 20 57 6F 72 6C 64 21 0A 	db	72,101,108,108,111,32,87,111,114,108,100,33,10
    81                           
    82                           ; message, plus carriage return
    83  01FEAB  00                 	align	2
    84                           
    85                           	psect	edata
    86  0000                     stk_offset	set	0
    87  0000                     auto_size	set	0
    88                           
    89                           ; stack_auto defines a symbol /name/_offset which equates to the
    90                           ; stack offset of the auto object in question
    91  000000                     
    92                           ; stack_param defines a symbol /name/_offset which equates to the
    93                           ; stack offset of the parameter object in question
    94  000000                     
    95                           ; alloc_stack adjusts the SP to allocate space for auto objects
    96                           ; it also links in to the btemp symbol so that can be used
    97  000000                     
    98                           ; restore_stack adjusts the SP to remove all auto and parameter
    99                           ; objects from the stack prior to returning from a function
   100  000000                     tosu	equ	0xFFF
   101                           tosh	equ	0xFFE
   102                           tosl	equ	0xFFD
   103                           stkptr	equ	0xFFC
   104                           pclatu	equ	0xFFB
   105                           pclath	equ	0xFFA
   106                           pcl	equ	0xFF9
   107                           tblptru	equ	0xFF8
   108                           tblptrh	equ	0xFF7
   109                           tblptrl	equ	0xFF6
   110                           tablat	equ	0xFF5
   111                           prodh	equ	0xFF4
   112                           prodl	equ	0xFF3
   113                           indf0	equ	0xFEF
   114                           postinc0	equ	0xFEE
   115                           postdec0	equ	0xFED
   116                           preinc0	equ	0xFEC
   117                           plusw0	equ	0xFEB
   118                           fsr0h	equ	0xFEA
   119                           fsr0l	equ	0xFE9
   120                           wreg	equ	0xFE8
   121                           indf1	equ	0xFE7
   122                           postinc1	equ	0xFE6
   123                           postdec1	equ	0xFE5
   124                           preinc1	equ	0xFE4
   125                           plusw1	equ	0xFE3
   126                           fsr1h	equ	0xFE2
   127                           fsr1l	equ	0xFE1
   128                           bsr	equ	0xFE0
   129                           indf2	equ	0xFDF
   130                           postinc2	equ	0xFDE
   131                           postdec2	equ	0xFDD
   132                           preinc2	equ	0xFDC
   133                           plusw2	equ	0xFDB
   134                           fsr2h	equ	0xFDA
   135                           fsr2l	equ	0xFD9
   136                           status	equ	0xFD8


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                               Fri Sep 03 01:09:43 2021

                             rst 0000                              loop 002E                             PORTD 000F83  
                           TRISD 000F95                             delay 0058                             setup 0004  
                           start 001A                            EECON1 000F7F                            TABLAT 000FF5  
                         TBLPTRH 000FF7                           TBLPTRL 000FF6                           TBLPTRU 000FF8  
                         counter 0005                           myArray 0400                           myTable FE9E  
               LCD_Write_Message FF64                          POSTINC0 000FEE                        UART_Setup FEC8  
                      RTCC_Setup FEAC                       delay_count 0006             UART_Transmit_Message FEDA  
                    RTCC_seconds 0007                         LCD_Setup FEF0                         myTable_l 00000D  
                RTCC_Get_Seconds FEBA                   loop_clock_read 004E  
